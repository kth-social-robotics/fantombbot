#!/usr/bin/env python
import logging

from fantom_util.fantom_logging import create_sns_logger
from sqs_listener import SqsListener
import boto3
import os
import signal
import sys


logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)
logger.addHandler(create_sns_logger())
sh = logging.StreamHandler(sys.stdout)
sh.setLevel(logging.INFO)

formatstr = '[%(asctime)s - %(name)s - %(levelname)s]  %(message)s'
formatter = logging.Formatter(formatstr)

sh.setFormatter(formatter)
logger.addHandler(sh)


session = boto3.Session()
s3 = session.client('s3')

if os.environ.get('STAGE') == 'PROD':
    FILE_NAME = 'models/graph_search_model-PROD-latest.pickle'
    QUEUE_NAME = 'QUEUE_NAME-PROD'
else:
    FILE_NAME = 'models/graph_search_model-BETA-latest.pickle'
    QUEUE_NAME = 'QUEUE_NAME-BETA'


class MyListener(SqsListener):
    def handle_message(self, body, attributes, messages_attributes):
        logger.info('received msg %s, %s, %s', body, attributes, messages_attributes)
        for record in body.get('Records', []):
            print(record.get('eventName'))
            if record.get('eventName', '').startswith('ObjectCreated'):
                file_name = record['s3']['object']['key']
                logger.info(f'received {file_name}')
                if file_name == FILE_NAME:
                    with open('app.pid', 'r') as f:
                        pid = int(f.read())
                        logger.info(f'killing PID: %d', pid)
                        os.kill(pid, signal.SIGHUP)


listener = MyListener(QUEUE_NAME, region_name='us-east-1')
listener.listen()
